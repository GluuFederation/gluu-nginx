
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        location /ox {
            # auth_basic      "Gluu_ox";
            # auth_basic_user_file    /usr/local/nginx/conf/.htpasswd;
            # optional - ox nginx module work only for open id mode.
            Gluu_ox;
            authn_type      openid-connect;
            cookie_path     /protected;
            app_dest_url    http://www.example.com/protected/dest.html;
            client_credits_path     /etc/myclient/client_creds.json;
            send_headers    on;

            # oxd configuration
            oxd_host_addr   127.0.0.1;
            oxd_port_num    8099;

            # memcached configuration
            memcached_host_addr     127.0.0.1;
            memcached_port_num      11211;

            # OpenID connect configuration
            openid_provider     https://idp.example.com/.well-know/openid-configuration;
            openid_client_redirect_uris     "https://www.example.com/callback1;https://www.example.com/callback2";
            openid_requested_scope  "openid;profile;email";
            openid_client_name  "My example website";
            openid_requested_acr    "https://schema.example.com/openid/acr/method/saml;https://schema.example/openid/acr/level/10";
            openid_response_type    code;

            # UMA
            uma_authorization_server    https://idp.example.com/.well-known/uma-configuration;
            uma_resource_name   "OX application";
            uma_get_scope   "https://schema.example.com/uma/readPolicy1;https://schema.example.com/uma/readPolicy2";
            uma_put_scope   "https://schema.example.com/uma/write";
            uma_post_scope  "https://schema.example.com/uma/write";
            uma_delete_scope    "https://schema.example.com/uma/delete";

            # Logout
            app_post_logout_url     https://idx.example.com/oxauth/seam/resource/restv1/oxauth/end_session;
            app_post_logout_redirect_url    http://www.example/protected/ox_logged_out.html;
            ox_logout_url   http://www.example.com/protected/logout;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
